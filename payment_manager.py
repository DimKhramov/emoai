#!/usr/bin/env python3
"""
–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∏—Å—Ç–µ–º—ã –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Telegram Stars
–û—Ç–¥–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –∏ –±–∞–ª–∞–Ω—Å–æ–º –∑–≤–µ–∑–¥
"""

import os
import asyncio
from datetime import date, timedelta
from aiogram import Bot, types
from aiogram.types import LabeledPrice, PreCheckoutQuery, InlineKeyboardMarkup, InlineKeyboardButton
from dotenv import load_dotenv

from storage.db import (
    get_user_premium_status, activate_premium_subscription,
    get_all_premium_users, get_user_by_telegram_id,
    set_auto_renewal
)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

API_TOKEN = os.getenv("TELEGRAM_API_TOKEN")
bot = Bot(token=API_TOKEN)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ü–µ–Ω (–≤ –∑–≤–µ–∑–¥–∞—Ö Telegram)
PREMIUM_PRICES = {
    "monthly": {"stars": 100, "days": 30, "title": "–ü—Ä–µ–º–∏—É–º –Ω–∞ –º–µ—Å—è—Ü"},
    "weekly": {"stars": 30, "days": 7, "title": "–ü—Ä–µ–º–∏—É–º –Ω–∞ –Ω–µ–¥–µ–ª—é"},
    "daily": {"stars": 10, "days": 1, "title": "–ü—Ä–µ–º–∏—É–º –Ω–∞ –¥–µ–Ω—å"}
}

def create_star_invoice(title: str, description: str, payload: str, star_count: int) -> dict:
    """
    –°–æ–∑–¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–Ω–≤–æ–π—Å–∞ –æ–ø–ª–∞—Ç—ã –∑–≤–µ–∑–¥–∞–º–∏ Telegram
    
    Args:
        title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–≤–∞—Ä–∞
        description: –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        payload: –ü–æ–ª–µ–∑–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–∞
        star_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã
    
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–Ω–≤–æ–π—Å–∞
    """
    return {
        "title": title,
        "description": description,
        "payload": payload,
        "star_count": star_count
    }

def process_successful_payment(user_id: int, payment_charge_id: str, total_amount: int) -> bool:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫—É
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
        payment_charge_id: ID –ø–ª–∞—Ç–µ–∂–∞ –≤ Telegram
        total_amount: –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ –≤ –∑–≤–µ–∑–¥–∞—Ö
    
    Returns:
        True –µ—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ —Å—É–º–º–µ
        days = 30  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –º–µ—Å—è—Ü
        if total_amount == 10:
            days = 1
        elif total_amount == 30:
            days = 7
        elif total_amount == 100:
            days = 30
        
        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫—É
        activate_premium_subscription(user_id, days)
        
        # –£–±–∏—Ä–∞–µ–º –±–æ–Ω—É—Å–Ω—ã–µ –∑–≤–µ–∑–¥—ã - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø–æ—Å—Ç—É–ø–∞—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å
        # bonus_stars = total_amount // 10  # 10% –±–æ–Ω—É—Å
        # if bonus_stars > 0:
        #     update_stars_balance(user_id, bonus_stars)
        
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞: {e}")
        return False

def get_user_payment_info(user_id: int) -> dict:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
    
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–ª–∞—Ç–µ–∂–∞—Ö
    """
    return get_user_premium_status(user_id)

async def send_premium_offer(bot: Bot, user_id: int):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø–æ–∫—É–ø–∫–µ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∏
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
    """
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è
    user_info = get_user_premium_status(user_id)
    auto_renewal_status = user_info.get('auto_renewal', False) if user_info else False
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üåü –î–µ–Ω—å ‚Ä¢ 10 ‚≠ê", callback_data="buy_premium_daily"),
            InlineKeyboardButton(text="‚ú® –ù–µ–¥–µ–ª—è ‚Ä¢ 30 ‚≠ê", callback_data="buy_premium_weekly")
        ],
        [
            InlineKeyboardButton(text="üíé –ú–ï–°–Ø–¶ ‚Ä¢ 100 ‚≠ê üî•", callback_data="buy_premium_monthly")
        ],
        [
            InlineKeyboardButton(text="üí∞ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="check_balance")
        ],
        [
            InlineKeyboardButton(
                text=f"üîÑ –ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ: {'‚úÖ –í–ö–õ' if auto_renewal_status else '‚ùå –í–´–ö–õ'}", 
                callback_data="toggle_auto_renewal"
            )
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
        ]
    ])
    
    auto_renewal_text = ""
    if auto_renewal_status:
        auto_renewal_text = "\nüîÑ *–ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ* - –ø–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –∑–∞ 100 ‚≠ê"
    
    offer_text = (
        "üåü –ü–†–ï–ú–ò–£–ú –ü–û–î–ü–ò–°–ö–ê üåü\n\n"
        "üéØ –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:\n"
        "‚Ä¢ üöÄ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
        "‚Ä¢ ‚ö° –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n"
        "‚Ä¢ üé® –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n"
        "‚Ä¢ üíé –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç\n\n"
        "üí∞ –¢–∞—Ä–∏—Ñ—ã:\n"
        "üåü –î–µ–Ω—å: 10 ‚≠ê (—ç–∫–æ–Ω–æ–º–∏—è 0%)\n"
        "‚ú® –ù–µ–¥–µ–ª—è: 30 ‚≠ê (—ç–∫–æ–Ω–æ–º–∏—è 57%)\n"
        "üíé –ú–ï–°–Ø–¶: 100 ‚≠ê (—ç–∫–æ–Ω–æ–º–∏—è 67%) üî•\n\n"
        "üî• –°–∞–º—ã–π –≤—ã–≥–æ–¥–Ω—ã–π —Ç–∞—Ä–∏—Ñ - –ú–ï–°–Ø–¶!\n"
        f"{auto_renewal_text}\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω:"
    )
    
    await bot.send_message(
        chat_id=user_id,
        text=offer_text,
        reply_markup=keyboard
    )

async def send_premium_reminder(bot: Bot, user_id: int, days_left: int):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–∫–æ—Ä–æ–º –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∏
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
        days_left: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    """
    if days_left <= 3:
        reminder_text = (
            f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ!\n\n"
            f"–í–∞—à–∞ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ {days_left} –¥–Ω.\n\n"
            f"üîÑ –ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å:\n"
            f"‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
            f"‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É\n"
            f"‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n\n"
            f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /premium –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è"
        )
        
        await bot.send_message(
            chat_id=user_id,
            text=reminder_text
        )

def get_premium_stats() -> dict:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    """
    premium_users = get_all_premium_users()
    
    total_premium = len(premium_users)
    
    return {
        "total_premium_users": total_premium,
        "premium_users": premium_users
    }

class PaymentManager:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π –æ–ø–ª–∞—Ç—ã"""
    
    def __init__(self):
        self.bot = bot
    
    async def create_star_invoice(self, user_id: int, plan: str = "monthly") -> types.Message:
        """
        –°–æ–∑–¥–∞–µ—Ç –∏–Ω–≤–æ–π—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã –∑–≤–µ–∑–¥–∞–º–∏ Telegram
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
            plan: –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ (monthly, weekly, daily)
        
        Returns:
            –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–≤–æ–π—Å–æ–º
        """
        if plan not in PREMIUM_PRICES:
            raise ValueError(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–ª–∞–Ω: {plan}")
        
        plan_info = PREMIUM_PRICES[plan]
        
        return await self.bot.send_invoice(
            chat_id=user_id,
            title=plan_info["title"],
            description=f"–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ {plan_info['days']} –¥–Ω–µ–π",
            payload=f"premium_{plan}_{user_id}",
            provider_token="",  # –î–ª—è Telegram Stars –Ω–µ –Ω—É–∂–µ–Ω
            currency="XTR",  # Telegram Stars
            prices=[LabeledPrice(label=plan_info["title"], amount=plan_info["stars"])]
        )
    
    async def process_successful_payment(self, user_id: int, plan: str):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
            plan: –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏
        """
        if plan not in PREMIUM_PRICES:
            return False
        
        plan_info = PREMIUM_PRICES[plan]
        
        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫—É
        activate_premium_subscription(user_id, plan_info["days"])
        
        # –£–±–∏—Ä–∞–µ–º –±–æ–Ω—É—Å–Ω—ã–µ –∑–≤–µ–∑–¥—ã - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø–æ—Å—Ç—É–ø–∞—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å
        # bonus_stars = plan_info["stars"] // 10  # 10% –±–æ–Ω—É—Å
        # if bonus_stars > 0:
        #     update_stars_balance(user_id, bonus_stars)
        
        return True
    
    async def get_user_payment_info(self, user_id: int) -> str:
        """
        –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
        
        Returns:
            –¢–µ–∫—Å—Ç–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö
        """
        info = get_user_premium_status(user_id)
        
        if not info:
            return "‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        
        status_text = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if info['premium_status'] else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
        
        return (
            f"üí∞ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö:*\n\n"
            f"üëë –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å: {status_text}\n"
            f"üìÖ –ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ: {info['subscription_end_date'] or '–ù–µ –∞–∫—Ç–∏–≤–Ω–∞'}"
        )
    
    async def send_premium_offer(self, user_id: int):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø–æ–∫—É–ø–∫–µ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∏
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
        """
        await send_premium_offer(self.bot, user_id)
    
    async def toggle_auto_renewal(self, user_id: int, enabled: bool) -> bool:
        """
        –í–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
            enabled: True –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è, False –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
        
        Returns:
            True –µ—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
        """
        try:
            set_auto_renewal(user_id, enabled)
            return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è: {e}")
            return False

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    manager = PaymentManager()
    
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    stats = get_premium_stats()
    print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats}")

if __name__ == "__main__":
    asyncio.run(main())
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏
"""

from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command
from storage.db import get_user_preferences, update_user_preferences

router = Router()

@router.message(Command("settings", "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏"))
async def show_settings(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.from_user.id
    preferences = get_user_preferences(user_id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    emoji_status = "‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if preferences['use_emojis'] else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã"
    
    style_map = {
        'friendly': 'üòä –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π',
        'formal': 'üìù –§–æ—Ä–º–∞–ª—å–Ω—ã–π', 
        'casual': 'üòé –ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π'
    }
    style_status = style_map.get(preferences['communication_style'], 'üòä –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π')
    
    length_map = {
        'short': 'üìè –ö—Ä–∞—Ç–∫–∏–µ',
        'medium': 'üìñ –°—Ä–µ–¥–Ω–∏–µ',
        'long': 'üìö –ü–æ–¥—Ä–æ–±–Ω—ã–µ'
    }
    length_status = length_map.get(preferences['preferred_response_length'], 'üìñ –°—Ä–µ–¥–Ω–∏–µ')
    
    settings_text = f"""‚öôÔ∏è **–¢–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—â–µ–Ω–∏—è:**

üé≠ **–≠–º–æ–¥–∑–∏:** {emoji_status}
üí¨ **–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:** {style_status}
üìù **–î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–æ–≤:** {length_status}

–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å:"""
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üé≠ –≠–º–æ–¥–∑–∏", callback_data="settings_emojis")],
        [InlineKeyboardButton(text="üí¨ –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è", callback_data="settings_style")],
        [InlineKeyboardButton(text="üìù –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–æ–≤", callback_data="settings_length")],
        [InlineKeyboardButton(text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ", callback_data="settings_reset")]
    ])
    
    await message.reply(settings_text, reply_markup=keyboard, parse_mode="Markdown")

@router.callback_query(F.data == "settings_emojis")
async def toggle_emojis(callback: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏"""
    user_id = callback.from_user.id
    preferences = get_user_preferences(user_id)
    
    new_emoji_setting = not preferences['use_emojis']
    update_user_preferences(user_id, use_emojis=new_emoji_setting)
    
    status = "–≤–∫–ª—é—á–µ–Ω—ã" if new_emoji_setting else "–æ—Ç–∫–ª—é—á–µ–Ω—ã"
    await callback.answer(f"–≠–º–æ–¥–∑–∏ {status}!")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    await show_settings_after_change(callback.message, user_id)

@router.callback_query(F.data == "settings_style")
async def change_style(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç–∏–ª—è –æ–±—â–µ–Ω–∏—è"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üòä –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π", callback_data="style_friendly")],
        [InlineKeyboardButton(text="üìù –§–æ—Ä–º–∞–ª—å–Ω—ã–π", callback_data="style_formal")],
        [InlineKeyboardButton(text="üòé –ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π", callback_data="style_casual")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="settings_back")]
    ])
    
    await callback.message.edit_text(
        "üí¨ **–í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:**\n\n"
        "üòä **–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π** ‚Äî —Ç—ë–ø–ª—ã–π, –ø–æ–Ω–∏–º–∞—é—â–∏–π\n"
        "üìù **–§–æ—Ä–º–∞–ª—å–Ω—ã–π** ‚Äî –≤–µ–∂–ª–∏–≤—ã–π, –±–µ–∑ —Å–ª–µ–Ω–≥–∞\n"
        "üòé **–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π** ‚Äî —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω—ã–π, —Å–æ —Å–ª–µ–Ω–≥–æ–º",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

@router.callback_query(F.data.startswith("style_"))
async def set_style(callback: CallbackQuery):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è"""
    user_id = callback.from_user.id
    style = callback.data.replace("style_", "")
    
    update_user_preferences(user_id, communication_style=style)
    
    style_names = {
        'friendly': '–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π',
        'formal': '—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π',
        'casual': '–Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π'
    }
    
    await callback.answer(f"–°—Ç–∏–ª—å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {style_names[style]}!")
    await show_settings_after_change(callback.message, user_id)

@router.callback_query(F.data == "settings_length")
async def change_length(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª–∏–Ω—ã –æ—Ç–≤–µ—Ç–æ–≤"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìè –ö—Ä–∞—Ç–∫–∏–µ", callback_data="length_short")],
        [InlineKeyboardButton(text="üìñ –°—Ä–µ–¥–Ω–∏–µ", callback_data="length_medium")],
        [InlineKeyboardButton(text="üìö –ü–æ–¥—Ä–æ–±–Ω—ã–µ", callback_data="length_long")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="settings_back")]
    ])
    
    await callback.message.edit_text(
        "üìù **–í—ã–±–µ—Ä–∏ –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–æ–≤:**\n\n"
        "üìè **–ö—Ä–∞—Ç–∫–∏–µ** ‚Äî 1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n"
        "üìñ **–°—Ä–µ–¥–Ω–∏–µ** ‚Äî 2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n"
        "üìö **–ü–æ–¥—Ä–æ–±–Ω—ã–µ** ‚Äî —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã",
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

@router.callback_query(F.data.startswith("length_"))
async def set_length(callback: CallbackQuery):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–æ–≤"""
    user_id = callback.from_user.id
    length = callback.data.replace("length_", "")
    
    update_user_preferences(user_id, preferred_response_length=length)
    
    length_names = {
        'short': '–∫—Ä–∞—Ç–∫–∏–µ',
        'medium': '—Å—Ä–µ–¥–Ω–∏–µ',
        'long': '–ø–æ–¥—Ä–æ–±–Ω—ã–µ'
    }
    
    await callback.answer(f"–î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {length_names[length]}!")
    await show_settings_after_change(callback.message, user_id)

@router.callback_query(F.data == "settings_reset")
async def reset_settings(callback: CallbackQuery):
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    user_id = callback.from_user.id
    
    update_user_preferences(
        user_id,
        use_emojis=True,
        communication_style='friendly',
        preferred_response_length='medium'
    )
    
    await callback.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã!")
    await show_settings_after_change(callback.message, user_id)

@router.callback_query(F.data == "settings_back")
async def back_to_settings(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    await show_settings_after_change(callback.message, callback.from_user.id)

async def show_settings_after_change(message: Message, user_id: int):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è"""
    preferences = get_user_preferences(user_id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    emoji_status = "‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if preferences['use_emojis'] else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã"
    
    style_map = {
        'friendly': 'üòä –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π',
        'formal': 'üìù –§–æ—Ä–º–∞–ª—å–Ω—ã–π', 
        'casual': 'üòé –ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π'
    }
    style_status = style_map.get(preferences['communication_style'], 'üòä –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π')
    
    length_map = {
        'short': 'üìè –ö—Ä–∞—Ç–∫–∏–µ',
        'medium': 'üìñ –°—Ä–µ–¥–Ω–∏–µ',
        'long': 'üìö –ü–æ–¥—Ä–æ–±–Ω—ã–µ'
    }
    length_status = length_map.get(preferences['preferred_response_length'], 'üìñ –°—Ä–µ–¥–Ω–∏–µ')
    
    settings_text = f"""‚öôÔ∏è **–¢–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—â–µ–Ω–∏—è:**

üé≠ **–≠–º–æ–¥–∑–∏:** {emoji_status}
üí¨ **–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:** {style_status}
üìù **–î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–æ–≤:** {length_status}

–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å:"""
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üé≠ –≠–º–æ–¥–∑–∏", callback_data="settings_emojis")],
        [InlineKeyboardButton(text="üí¨ –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è", callback_data="settings_style")],
        [InlineKeyboardButton(text="üìù –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–æ–≤", callback_data="settings_length")],
        [InlineKeyboardButton(text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ", callback_data="settings_reset")]
    ])
    
    await message.edit_text(settings_text, reply_markup=keyboard, parse_mode="Markdown")
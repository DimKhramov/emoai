#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞
"""

import asyncio
import logging
from integrations.telegram import bot
from storage.db import get_all_users
from aiogram.exceptions import TelegramForbiddenError, TelegramBadRequest

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.WARNING)  # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ª–æ–≥–∏
logger = logging.getLogger(__name__)

async def check_blocked_users():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞"""
    print("=== –ü–†–û–í–ï–†–ö–ê –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô ===")
    print()
    
    users = get_all_users()
    print(f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: {len(users)}")
    print()
    
    blocked_users = []
    active_users = []
    
    print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    for i, user in enumerate(users, 1):
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
            chat_info = await bot.get_chat(user['telegram_id'])
            active_users.append({
                'telegram_id': user['telegram_id'],
                'username': user['username'],
                'first_name': getattr(chat_info, 'first_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ'),
                'last_name': getattr(chat_info, 'last_name', ''),
                'created_at': user['created_at']
            })
            print(f"  {i:2d}. ‚úÖ {user['username'] or '–ë–µ–∑ –Ω–∏–∫–∞'} (ID: {user['telegram_id']})")
            
        except TelegramForbiddenError:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
            blocked_users.append({
                'telegram_id': user['telegram_id'],
                'username': user['username'],
                'created_at': user['created_at']
            })
            print(f"  {i:2d}. ‚ùå {user['username'] or '–ë–µ–∑ –Ω–∏–∫–∞'} (ID: {user['telegram_id']}) - –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–õ –ë–û–¢–ê")
            
        except TelegramBadRequest as e:
            # –ù–µ–≤–µ—Ä–Ω—ã–π chat_id –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
            blocked_users.append({
                'telegram_id': user['telegram_id'],
                'username': user['username'],
                'created_at': user['created_at'],
                'error': str(e)
            })
            print(f"  {i:2d}. ‚ö†Ô∏è  {user['username'] or '–ë–µ–∑ –Ω–∏–∫–∞'} (ID: {user['telegram_id']}) - –û–®–ò–ë–ö–ê: {e}")
            
        except Exception as e:
            print(f"  {i:2d}. ‚ùì {user['username'] or '–ë–µ–∑ –Ω–∏–∫–∞'} (ID: {user['telegram_id']}) - –ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await asyncio.sleep(0.1)
    
    print()
    print("=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ ===")
    print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(active_users)}")
    print(f"‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö/–Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö: {len(blocked_users)}")
    print()
    
    if blocked_users:
        print("üö´ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:")
        for i, user in enumerate(blocked_users, 1):
            username_display = f"@{user['username']}" if user['username'] else "–ë–µ–∑ –Ω–∏–∫–∞"
            error_info = f" ({user.get('error', '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞')})" if 'error' in user else ""
            print(f"  {i}. {username_display} (ID: {user['telegram_id']}) - {user['created_at']}{error_info}")
    else:
        print("üéâ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã!")
    
    print()
    print("=== –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===")

if __name__ == "__main__":
    asyncio.run(check_blocked_users())